projname: "test"
specs: ["Ag", "Ni"]
cores: 54

pipeline:
    relax_polygpu:
        infile: "result_min"
        potential: "Unep_v1.txt" 
        atomtypes: "not used" # if None: default specs in head of file; if list of int -> user specs[*atom_types]; if list of str (use it)
        init_temp: 0.1
        start_temp: 700
        stop_temp: 700
        end_temp: 0.1
        heat_time: 1e6
        relax_time: 1e7
        cool_time: 1e6
        outfile: "Ag_10nm_reord_relax.lmp"

pipeline_example: # запускается pipeline
    #step 1: create polycrystal
    create_monocrystal: # https://atomsk.univ-lille.fr/doc/en/mode_create.html
        type: fcc # fcc ГЦК, bcc ОЦК, sc примитивная 
        a: 4.08 # Размер решетки
        c: 0 # для генерации тетрагональных и гексагональных решеток
        atomtypes: False # если False, то используется specs[0]; если число, то specs[atom_type]; если str то оно и используется
        outname: "fcc.xsf"
    create_polycrystal:
        x: 100 # angstrem
        y: 100
        z: 100
        grain_num: 10 # Как много зерен
        stamp_file: "fcc.xsf"
        outfile: "Ag_10nm.lmp" # to avoid errors use inside pipeline ordered lammps data file
    #step 2: minimize and relax polycrystal
    reorder_index:
        infile: "Ag_10nm.lmp"
        outfile: "Ag_10nm_reord.lmp"
    convert_format:
        infile: "Ag_10nm_reord.lmp"
        informat: "lammps/data" #
        outfile: "Ag_10nm_reord.xyz"
        outformat: "xyz"
    convert_format_atomsk:
        infile: "Ag_10nm_reord.lmp"
        outfile: "Ag_10nm_reord.xyz"
    minimize_polycrystal:
        infile: "Ag_10nm_reord.lmp"
        potential_type: "eam/fs"
        potential: "Ag-Ni.eam.fs" 
        atomtypes: ["Ag"] # if None: default specs in head of file; if list of int -> user specs[*atom_types]; if list of str (use it)
        outfile: "Ag_10nm_reord_min.lmp"
        energy_file: "pureE"
    relax_polycrystal:
        infile: "Ag_10nm_reord.lmp"
        potential_type: "eam/fs"
        potential: "Ag-Ni.eam.fs" 
        atomtypes: ["Ag"] # if None: default specs in head of file; if list of int -> user specs[*atom_types]; if list of str (use it)
        init_temp: 0.1
        start_temp: 700
        stop_temp: 700
        end_temp: 0.1
        heat_time: 1e5
        relax_time: 1e6
        cool_time: 1e6
        outfile: "Ag_10nm_reord_relax.lmp"
        cores: False
    # step 3: calculate X data for training (gb_ids, soap_vector)
    get_gb_ids:
        infile: "Ag_10nm_reord_relax.lmp"
        cutoff: 3.5
        outfile: "GBs.lst" # only row index
    soap:
        infile: "Ag_10nm_reord_relax.lmp"
        soap_cutoff: 6.0
        n_max: 12
        l_max: 12
        sigma: 1
        atomtypes: False # use specs else list of integer contain atomic number (not index in specs), 0-bulk, 1-impurity
        outfile: "soap.lst"
        cores: False
    extract_pca:
        infile: "soap.lst"
        pca_num: 10
        outfile: "pca.lst"
        dispersion_file: False # TODO create file with dispersion by component
    select_points:
        infile: "pca.lst"
        gb_file: "GBs.lst"
        points_num: 200
        outfile: "GBs_best.lst"
        random_state: 42
    # step 4: calculate Y data: spectra of segregation energy
    add_impurity:
        infile: "Ag_10nm_reord_relax.lmp"
        imp_id: 0
        atomtypes: False
        outfile: "Ag_10nm_reord_relax_imp.lmp"
    replace_and_minimize:
        infile: "Ag_10nm_reord_relax.lmp"
        imp_id: 0
        minimize_func: "minimize_polycrystal"
        potential: "Ag-Ni.eam.fs"
        minimize-args:
            potential_type: "eam/fs"
        atomtypes: False
        energy_file: "pureE"
    calculate_spectra:
        infile: "Ag_10nm_reord_relax.lmp"
        gb_file: "GBs_best.lst"
        atomtypes: False
        base_energy: "pureE"
        minimize_func: "minimize_polycrystal"
        potential: "Ag-Ni.eam.fs"
        minimize-args:
            potential_type: "eam/fs"
        outfile: "Eseg_best_calc"
    # step 5: train model
    train_lr:
        x_file: "pca.lst"
        y_file: "Eseg_best"
        gb_file: "GBs_best"
        outfile: "AgNi-nn.pkl"
        metrics: ["MAE"] # TODO
    predict_lr:
        infile: "pca.lst"
        gb_file: "GBs.lst"
        model_file: "AgNi-nn.pkl"
        outfile: "Eseg_pred"
        metrics: ["MAE"] # TODO
    # gpumd
    relax_polygpu:
        infile: "Ag_10nm_reord.lmp"
        potential: "Unep_v1.txt" 
        atomtypes: "not used" # if None: default specs in head of file; if list of int -> user specs[*atom_types]; if list of str (use it)
        init_temp: 0.1
        start_temp: 700
        stop_temp: 700
        end_temp: 0.1
        heat_time: 1e6
        relax_time: 1e7
        cool_time: 1e6
        outfile: "Ag_10nm_reord_relax.lmp"